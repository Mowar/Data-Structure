背景知识：图的存储、遍历及其应用。

目的要求：
掌握图的常见应用算法的思想及其程序实现。

实验内容：
（1）键盘输入数据，分别建立一个有向图的邻接表和一个无向图的邻接矩阵。
（2）输出该邻接表和邻接矩阵。
（3）以有向图的邻接表为基础输出它的拓扑排序序列。
（4）以无向图的邻接矩阵为基础实现最小生成树的PRIM算法。
（5）以有向图的邻接矩阵为基础实现Dijkstra算法输出单源点到其它顶点的最短路径。
（6）在主函数中设计一个简单的菜单，分别调试上述算法。
（7）*综合训练：校园导航
1）问题描述：
在给出校园各主要建筑的名称信息及有路线连通的建筑之间的距离（或行进时间）的基础上，利用校园导航系统计算出给定的起点到终点之间距离最近（或行进时间最短）的行进路线。
2）设计要求：文件读入或键盘方式读入校园主要建筑信息及建筑间的距离（或行进时间）信息。创建完地图后，以文件形式保存，以免重复创建。计算出给定的起点到终点之间距离最近（或行进时间最短）的行进路线，并输出该路线（包括经过哪些建筑）及其总距离（或总行进时间）。

实验说明：     1．类型定义
邻接表存储见实验07
邻接矩阵存储示例
?        #define MAX_VERTEX_NUM 20  //顶点最大个数
?        typedef enum {DG, DN, UDG, UDN} GraphKind;
typedef struct ArcCell{
?           VRType  adj;
?           int       weight;  //边的权值
?        }ArcCell; AdjMatrix[MAX_VERTEX_NUM] [MAX_VERTEX_NUM];           typedef struct{
  VertexType vexs[MAX_VERTEX_NUM];
  AdjMatrix  arcs;
?          int        vexnum, arcnum; //顶点的实际数，边的实际数
?          GraphKind kind;
?       }MGraph;    

注意问题：
?    注意理解各算法实现时所采用的存储结构。
